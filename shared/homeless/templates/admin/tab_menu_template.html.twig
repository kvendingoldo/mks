{% extends 'SonataAdminBundle:Core:tab_menu_template.html.twig' %}

{% block item %}
    {% import "knp_menu.html.twig" as macros %}
    {% if item.displayed %}
        {%- set attributes = item.attributes %}
        {%- set is_dropdown = attributes.dropdown|default(false) %}
        {%- set divider_prepend = attributes.divider_prepend|default(false) %}
        {%- set divider_append = attributes.divider_append|default(false) %}

        {# unset bootstrap specific attributes #}
        {%- set attributes = attributes|merge({'dropdown': null, 'divider_prepend': null, 'divider_append': null }) %}

        {%- if divider_prepend %}
            {{ block('dividerElement') }}
        {%- endif %}

        {# building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}

        {%- if matcher is defined %} {# KnpMenu 2.0#}
            {%- if matcher.isCurrent(item) %}
                {%- set classes = classes|merge([options.currentClass]) %}
            {%- elseif matcher.isAncestor(item, options.depth) %}
                {%- set classes = classes|merge([options.ancestorClass]) %}
            {%- endif %}
        {%- else %} {# KnpMenu 1.X #}
            {%- if item.current %}
                {%- set classes = classes|merge([options.currentClass]) %}
            {%- elseif item.currentAncestor %}
                {%- set classes = classes|merge([options.ancestorClass]) %}
            {%- endif %}
        {%- endif %}

        {% if item.uri == path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')) %}
            {%- set classes = classes|merge(['active']) %}
        {% endif %}

        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}

        {# building the class of the children #}
        {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
        {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}

        {# adding classes for dropdown #}
        {%- if is_dropdown %}
            {%- set classes = classes|merge(['dropdown']) %}
            {%- set childrenClasses = childrenClasses|merge(['dropdown-menu']) %}
        {%- endif %}

        {# putting classes together #}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}

        {# displaying the item #}
        <li{{ macros.attributes(attributes) }}>
            {%- if is_dropdown %}
                {{ block('dropdownElement') }}
            {%- elseif item.uri is not empty and (not item.current or options.currentAsLink) %}
                {{ block('linkElement') }}
            {%- else %}
                {{ block('spanElement') }}
            {%- endif %}
            {# render the list of children#}
            {{ block('list') }}
        </li>

        {%- if divider_append %}
            {{ block('dividerElement') }}
        {%- endif %}
    {% endif %}
{% endblock %}

{% block linkElement %}
    {% set options={currentClass:'active'} %}
    {% import "knp_menu.html.twig" as macros %}
    <a
            href="{{ item.uri }}"{{ macros.attributes(item.linkAttributes) }}
            style="font-size: 14px; padding: 10px 8px 15px 8px; {% if item.name =='Услуги' or item.name =='Примечания' or item.name =='Выдать справку'  %} ;float: left; {% endif %}"
            {% if item.label matches  '{.([0-9]+.)}' %}class="tab_menu_bold_itm"{% endif %}
    >
        {% if item.attribute('icon') is not empty %}
            <i class="{{ item.attribute('icon') }}"></i>
        {% endif %}
        {{ block('label') }}
    </a>
    {% if item.name =='Услуги' or item.name =='Примечания' %}
        {% set id = item.name %}
        <a style="float: left; padding-left: 0px; padding-top: 12px;"  href="{{ item.uri|slice(0,item.uri|length - 4) }}create?type=custom_modal" data-toggle="modal" data-target="#field_dialog_{{ id }}">
            <i class="fa fa-plus-circle" style="color: rgb(0, 166, 90);" aria-hidden="true"></i>
        </a>
        <style>
            #field_dialog_{{ id }} .modal-content {
                border-radius: 6px;
                padding: 15px 10px 1px 10px;
            }
        </style>
        {% include 'SonataDoctrineORMAdminBundle:CRUD:edit_modal.html.twig' %}
    {% elseif item.name =='Выдать справку' %}
        {% set id = item.name|replace({ ' ': ''})  %}
        <a style="float: left; padding-left: 0px; padding-top: 12px;"  href="{{ item.uri|slice(0,item.uri|length - 4) }}list?type=custom_modal" data-toggle="modal" data-target="#field_dialog_{{ id }}">
            <i class="fa fa-plus-circle" style="color: rgb(0, 166, 90);" aria-hidden="true"></i>
        </a>
        <style>
            #field_dialog_{{ id }} .modal-content {
                border-radius: 6px;
                padding: 15px 10px 1px 10px;
            }
        </style>
        {% include 'SonataDoctrineORMAdminBundle:CRUD:edit_modal.html.twig' %}
    {% endif %}

{% endblock %}
